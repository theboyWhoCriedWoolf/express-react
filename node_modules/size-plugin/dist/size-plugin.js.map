{"version":3,"file":"size-plugin.js","sources":["../src/util.mjs","../src/index.mjs"],"sourcesContent":["/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nexport function toMap(names, values) {\n\treturn names.reduce((map, name, i) => {\n\t\tmap[name] = values[i];\n\t\treturn map;\n\t}, {});\n}\n\nexport function dedupe(item, index, arr) {\n\treturn arr.indexOf(item) === index;\n}\n","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport path from 'path';\nimport promisify from 'util.promisify';\nimport globPromise from 'glob';\nimport minimatch from 'minimatch';\nimport gzipSize from 'gzip-size';\nimport chalk from 'chalk';\nimport prettyBytes from 'pretty-bytes';\nimport escapeRegExp from 'escape-string-regexp';\nimport { toMap, dedupe } from './util.mjs';\n\nconst glob = promisify(globPromise);\n\nconst NAME = 'SizePlugin';\n\nexport default class SizePlugin {\n\tconstructor (options) {\n\t\tthis.options = options || {};\n\t\tthis.pattern = this.options.pattern || '**/*.{mjs,js,css,html}';\n\t\tthis.exclude = this.options.exclude;\n\t}\n\n\treverseTemplate(filename, template) {\n\t\tconst hashLength = this.output.hashDigestLength;\n\t\tconst replace = [];\n\t\tlet count = 0;\n\t\tfunction replacer() {\n\t\t\tlet out = '';\n\t\t\tfor (let i = 1; i < arguments.length - 2; i++) {\n\t\t\t\t// eslint-disable-next-line prefer-spread,prefer-rest-params\n\t\t\t\tlet value = arguments[i];\n\t\t\t\tif (replace[i - 1]) value = value.replace(/./g, '*');\n\t\t\t\tout += value;\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\tconst reg = template.replace(/(^|.+?)(?:\\[([a-z]+)(?::(\\d))?\\]|$)/g, (s, before, type, size) => {\n\t\t\tlet out = '';\n\t\t\tif (before) {\n\t\t\t\tout += `(${escapeRegExp(before)})`;\n\t\t\t\treplace[count++] = false;\n\t\t\t}\n\t\t\tif (type==='hash' || type==='contenthash') {\n\t\t\t\tconst len = Math.round(size) || hashLength;\n\t\t\t\tout += `([0-9a-zA-Z]{${len}})`;\n\t\t\t\treplace[count++] = true;\n\t\t\t}\n\t\t\telse if (type) {\n\t\t\t\tout += '(.*?)';\n\t\t\t\treplace[count++] = false;\n\t\t\t}\n\t\t\treturn out;\n\t\t});\n\t\tconst matcher = new RegExp(`^${reg}$`);\n\t\treturn matcher.test(filename) && filename.replace(matcher, replacer);\n\t}\n\n\tstripHash(filename) {\n\t\treturn (\n\t\t\tthis.reverseTemplate(filename, this.output.filename) ||\n      this.reverseTemplate(filename, this.output.chunkFilename) ||\n      filename\n\t\t);\n\t}\n\n\tasync apply (compiler) {\n\t\tconst outputPath = compiler.options.output.path;\n\t\tthis.output = compiler.options.output;\n\t\tthis.sizes = this.getSizes(outputPath);\n\n\t\tcompiler.hooks.afterEmit.tapPromise(NAME, compilation => this.outputSizes(compilation.assets).catch(console.error));\n\t}\n\n\tasync outputSizes (assets) {\n\t\t// map of filenames to their previous size\n\t\t// Fix #7 - fast-async doesn't allow non-promise values.\n\t\tconst sizesBefore = await Promise.resolve(this.sizes);\n\n\t\tconst isMatched = minimatch.filter(this.pattern);\n\t\tconst isExcluded = this.exclude ? minimatch.filter(this.exclude) : () => false;\n\t\tconst assetNames = Object.keys(assets).filter(file => isMatched(file) && !isExcluded(file));\n\t\tconst sizes = await Promise.all(assetNames.map(name => gzipSize(assets[name].source())));\n\n\t\t// map of de-hashed filenames to their final size\n\t\tthis.sizes = toMap(assetNames.map(filename => this.stripHash(filename)), sizes);\n\n\t\t// get a list of unique filenames\n\t\tconst files = Object.keys(sizesBefore).concat(Object.keys(this.sizes)).filter(dedupe);\n\n\t\tconst width = Math.max(...files.map(file => file.length));\n\t\tlet output = '';\n\t\tfor (const name of files) {\n\t\t\tconst size = this.sizes[name] || 0;\n\t\t\tconst delta = size - (sizesBefore[name] || 0);\n\t\t\tconst msg = new Array(width - name.length + 2).join(' ') + name + ' ⏤  ';\n\t\t\tconst color = size > 100 * 1024 ? 'red' : size > 40 * 1024 ? 'yellow' : size > 20 * 1024 ? 'cyan' : 'green';\n\t\t\tlet sizeText = chalk[color](prettyBytes(size));\n\t\t\tif (delta) {\n\t\t\t\tlet deltaText = (delta > 0 ? '+' : '') + prettyBytes(delta);\n\t\t\t\tif (delta > 1024) {\n\t\t\t\t\tsizeText = chalk.bold(sizeText);\n\t\t\t\t\tdeltaText = chalk.red(deltaText);\n\t\t\t\t}\n\t\t\t\telse if (delta < -10) {\n\t\t\t\t\tdeltaText = chalk.green(deltaText);\n\t\t\t\t}\n\t\t\t\tsizeText += ` (${deltaText})`;\n\t\t\t}\n\t\t\toutput += msg + sizeText + '\\n';\n\t\t}\n\t\tif (output) {\n\t\t\tconsole.log(output);\n\t\t}\n\t}\n\n\tasync getSizes (cwd) {\n\t\tconst files = await glob(this.pattern, { cwd, ignore: this.exclude });\n\n\t\tconst sizes = await Promise.all(files.map(\n\t\t\tfile => gzipSize.file(path.join(cwd, file))\n\t\t));\n\n\t\treturn toMap(files.map(filename => this.stripHash(filename)), sizes);\n\t}\n}\n"],"names":["const","let","arguments","this"],"mappings":"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"}